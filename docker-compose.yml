version: '3.7'

services:
  users_service:
    build:
      context: users_service/
    volumes:
      - ./users_service/:/var/www/users_service
    depends_on:
      - db
  
  notifications_service:
    build:
      context: notifications_service/
    volumes:
      - ./notifications_service/:/var/www/notifications_service
    depends_on:
      - db

  db:
    image: mysql:5.7
    environment:
      #MYSQL_DATABASE: next_basket_db
      #MYSQL_USER: next_basket
      #MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - db_data:/var/lib/mysql

  nginx:
    build: ./nginx
    ports:
      - "8020:8020"
      - "8030:8030"
    volumes:
      - ./users_service/:/var/www/users_service
      - ./notifications_service/:/var/www/notifications_service
    depends_on:
      - users_service
      - notifications_service
  
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - 15673:15672
      - 5673:5672
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  db_data:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
